<div class="color-picker-container">
    <h2>Color Code Generator</h2>
    
    <!-- Color Picker -->
    <div class="color-picker">
        <input type="color" id="colorInput" value="#ff0000">
        <label for="colorInput">Choose Color</label>
    </div>
    
    <!-- Color Preview -->
    <div class="color-preview" id="colorPreview">
        <span class="sample-text">Sample Text</span>
    </div>
    
    <!-- Color Codes -->
    <div class="color-codes">
        <div class="code-box">
            <label>HEX</label>
            <input type="text" id="hexCode" readonly>
        </div>
        <div class="code-box">
            <label>RGB</label>
            <input type="text" id="rgbCode" readonly>
        </div>
        <div class="code-box">
            <label>HSL</label>
            <input type="text" id="hslCode" readonly>
        </div>
    </div>
</div>

<style>
.color-picker-container {
    max-width: 500px;
    margin: 20px auto;
    padding: 20px;
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

.color-picker {
    margin: 15px 0;
}

.color-preview {
    width: 100%;
    height: 100px;
    border-radius: 5px;
    margin: 15px 0;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s;
}

.sample-text {
    padding: 5px 10px;
    border-radius: 3px;
    background: rgba(0,0,0,0.1);
}

.color-codes {
    display: grid;
    grid-gap: 10px;
}

.code-box {
    margin: 5px 0;
}

.code-box label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

.code-box input {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-family: monospace;
}

input[type="color"] {
    width: 50px;
    height: 30px;
    cursor: pointer;
}
</style>

<script>
const colorInput = document.getElementById('colorInput');
const colorPreview = document.getElementById('colorPreview');
const hexCode = document.getElementById('hexCode');
const rgbCode = document.getElementById('rgbCode');
const hslCode = document.getElementById('hslCode');

function updateColors() {
    const selectedColor = colorInput.value;
    
    // Update preview
    colorPreview.style.backgroundColor = selectedColor;
    
    // Update HEX code
    hexCode.value = selectedColor.toUpperCase();
    
    // Convert to RGB
    const rgb = hexToRgb(selectedColor);
    rgbCode.value = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;
    
    // Convert to HSL
    const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);
    hslCode.value = `hsl(${Math.round(hsl.h)}, ${Math.round(hsl.s)}%, ${Math.round(hsl.l)}%)`;
    
    // Update text color based on brightness
    const brightness = Math.round(((rgb.r * 299) + (rgb.g * 587) + (rgb.b * 114)) / 1000);
    colorPreview.style.color = brightness > 125 ? '#000' : '#fff';
}

function hexToRgb(hex) {
    hex = hex.replace('#', '');
    const r = parseInt(hex.substring(0, 2), 16);
    const g = parseInt(hex.substring(2, 4), 16);
    const b = parseInt(hex.substring(4, 6), 16);
    return { r, g, b };
}

function rgbToHsl(r, g, b) {
    r /= 255, g /= 255, b /= 255;
    const max = Math.max(r, g, b), min = Math.min(r, g, b);
    let h, s, l = (max + min) / 2;

    if (max === min) {
        h = s = 0;
    } else {
        const d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }
        h *= 60;
    }

    return { h: h || 0, s: s * 100, l: l * 100 };
}

// Initial update
updateColors();

// Event listeners
colorInput.addEventListener('input', updateColors);
</script>
